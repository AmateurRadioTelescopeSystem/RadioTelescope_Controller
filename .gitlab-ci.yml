image: python:latest  # Global image, used if not defined aotherwise

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Global caching directive
cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
  paths:
    - .cache/pip

# Define a template for Python testing
.python_stack: &python_version_testing
  stage: test
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - .cache/pip
  script:
    - apt-get install -y -qq software-properties-common python3-dev xvfb qt5-default
    - python3 -m pip install pyvirtualdisplay
  after_script:
    - ./configure.sh
    - ./Tests/run_tests.sh

# Define the stages of thi CI
stages:
  - build
  - test
  - deploy

# Run this commands globally, wherever it is not defined locally
before_script:
  - apt-get update -qq && apt-get install -y -qq libnss3 libnss3-dev libgl1
  - python3 -m pip install --upgrade pip
  - python3 -m pip install -r requirements.txt
  - python3 -V  # Print out python version for debugging
  - python3 -m pip --version

# Code linting
pylava:
  stage: build
  image: alpine:latest
  before_script:
    - apk update && apk add python3
    - python3 -m pip install --upgrade pip && python3 -m pip install pylava
    - pylava --version
  script:
    - ci/pylava.sh

pylint:
  stage: build
  image: alpine:latest
  before_script:
    - apk update && apk add python3 python3-dev py3-qt5 build-base
    - python3 -m pip install --upgrade pip && python3 -m pip install pylint
    - pylint --version
  script:
    - ci/pylint.sh

# Unit and integration testing
tests-python-latest:
  image: python:latest
  <<: *python_version_testing

tests-python-3.6:
  image: python:3.6
  <<: *python_version_testing

tests-python-3.5:
  image: python:3.5
  <<: *python_version_testing

tests-python-3.4:
  image: python:3.4
  <<: *python_version_testing

# Deployment section
pages:
  stage: deploy
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - .cache/pip
  script:
    - python3 -m pip install sphinx recommonmark groundwork-sphinx-theme
  after_script:
    - sphinx-build --color -b html docs/source public
    - sphinx-build --color -b coverage docs/source coverage
  artifacts:
    paths:
      - public
  only:
    - master
